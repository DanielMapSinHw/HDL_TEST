-- VHDL Entity Test_Github_lib.TOP.symbol
--
-- Created:
--          by - adprda2.UNKNOWN (MD2D3GRC)
--          at - 16:38:06 02.08.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2023.3 Built on 9 Jul 2023 at 00:00:47
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY TOP IS
   PORT( 
      clk : IN     std_logic;
      d   : IN     std_logic
   );

-- Declarations

END TOP ;

--
-- VHDL Architecture Test_Github_lib.TOP.struct
--
-- Created:
--          by - adprda2.UNKNOWN (MD2D3GRC)
--          at - 13:27:38 03.08.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2023.3 Built on 9 Jul 2023 at 00:00:47
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.numeric_std.all;

LIBRARY Test_Github_lib;

ARCHITECTURE struct OF TOP IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL din0    : std_logic;
   SIGNAL din1    : std_logic;
   SIGNAL dout    : std_logic;
   SIGNAL edge    : std_logic;
   SIGNAL i_bit1  : std_logic;
   SIGNAL i_bit2  : std_logic;
   SIGNAL i_carry : std_logic;
   SIGNAL o_carry : std_logic;
   SIGNAL o_sum   : std_logic;


   -- Component Declarations
   COMPONENT edge_detector
   PORT (
      clk  : IN     std_logic;
      d    : IN     std_logic;
      edge : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT full_adder
   PORT (
      i_bit1  : IN     std_logic;
      i_bit2  : IN     std_logic;
      i_carry : IN     std_logic;
      o_carry : OUT    std_logic;
      o_sum   : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : edge_detector USE ENTITY Test_Github_lib.edge_detector;
   FOR ALL : full_adder USE ENTITY Test_Github_lib.full_adder;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_1' of 'and'
   dout <= din0 AND din1;

   -- Instance port mappings.
   U_0 : edge_detector
      PORT MAP (
         clk  => clk,
         d    => d,
         edge => edge
      );
   U_2 : full_adder
      PORT MAP (
         i_bit1  => i_bit1,
         i_bit2  => i_bit2,
         i_carry => i_carry,
         o_sum   => o_sum,
         o_carry => o_carry
      );

END struct;
